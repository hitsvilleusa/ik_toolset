#!/usr/bin/env ruby

# Creates all of the connected graphs for the given order.  Should
# be used with the -o <output file> option because there is information
# printed to stderr that is not a part of the graph files.  The format 
# created by this generator is the format that can be used for the other
# tools that can read from graph files as input.
ENV['PATH'] += ":#{File.join(File.dirname(__FILE__), '..', 'nauty')}"

require 'optparse'

OPTIONS = {}

OptionParser.new do |opts|
  opts.banner  = "Usage: #{$0} <order> [-o outfile]\n"
  
  opts.on("-o", "--outfile STRING", "The output file path.") do |filepath|
    OPTIONS[:outfile] = filepath
  end
end.parse!

begin
  @out = OPTIONS[:outfile] ? File.new(OPTIONS[:outfile], 'w') : $stdout
rescue => e
  $stderr.puts e.message
  exit 0
end

unless ARGV.size == 1
  $stderr.puts "Must supply the graph order as an argument."
  exit 0
end

@out.puts `geng -c #{ARGV.first} | showg -eF -l0`
